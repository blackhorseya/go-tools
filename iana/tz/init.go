package tz

import (
	"archive/zip"
	"bytes"
	_ "embed"
	"fmt"
	"io/fs"
	"os"
	"os/exec"
	"path/filepath"
	"time"

	"github.com/hsuanshao/go-tools/ctx"
)

func Prepare(ctx ctx.CTX) {
	prepareTZData(ctx)
}

func prepareTZData(ctx ctx.CTX) {
	b, _ := exec.Command("go", "env", "GOROOT").Output()
	goroot := string(bytes.TrimSpace(b))

	zipname := filepath.Join(goroot, "lib", "time", "zoneinfo.zip")

	zipf, err := os.Open(zipname)
	if err != nil {
		ctx.WithField("err", err).Fatal("open zoneinfo failed")
		return
	}
	defer zipf.Close()
	zipfi, err := zipf.Stat()
	if err != nil {
		ctx.WithField("err", err).Fatal("open zoneinfo.zip failed")
		return
	}

	f, _ := os.Create("./ianatimezone.go")

	fmt.Fprintln(f)
	fmt.Fprintf(f, "package %s\n", "iana")
	fmt.Fprintln(f)
	fmt.Fprintln(f, "/** ")
	fmt.Fprintln(f, "* DON'T MODIFIED THIS FILE, IT IS AUTO GENERATED BY iana/tz/init.go")
	fmt.Fprintln(f, "*/")
	fmt.Fprintln(f)
	fmt.Fprintln(f, `import (
		tzm "github.com/hsuanshao/go-tools/iana/entity/models"
		)`)
	fmt.Fprintln(f)
	fmt.Fprintf(f, "var updateIANASliaceUnixSec = int64(%d)", time.Now().Unix())
	fmt.Fprintln(f)
	fmt.Fprintln(f, "var ianaTimeZones = []tzm.IANATimezone{")

	zr, _ := zip.NewReader(zipf, zipfi.Size())
	fs.WalkDir(zr, ".", func(path string, d fs.DirEntry, err error) error {
		if !d.IsDir() {
			fmt.Fprintf(f, "\t%q,\n", path)
		}
		return nil
	})

	fmt.Fprintln(f, "}")

}
